parameters:
  example: 'foo'

steps:
- script: |
    CONTAINER_ID=$(head -1 /proc/self/cgroup|cut -d/ -f3)
    /tmp/docker exec -t -u 0 $CONTAINER_ID sh -c "\
      apt-get update && \
      DEBIAN_FRONTEND=noninteractive \
      apt-get -o Dpkg::Options::='--force-confold' \
        install -y \
          sudo"
      # mv /bin/bash /bin/_bash
      # echo '#!/bin/sh\nsudo su\n/bin/_bash \"\$@\"' > /bin/bash
      # chmod +x /bin/bash"
  displayName: Install sudo
  name: install_sudo
- script: |
    sudo -H --preserve-env -u root bash << EOF
    set -x
    mkdir -p $ROS_WS
    ln -s /opt/ros/$ROS_DISTRO $ROS_WS/install
    echo $CACHE_NONCE | \
      (echo cache_nonce && cat) >> $ROS_WS/checksum.txt
    sha256sum $ROS_WS/checksum.txt >> $ROS_WS/checksum.txt
    TZ=utc stat -c '%y' /ros_entrypoint.sh | \
      (echo ros_entrypoint && cat) >> $ROS_WS/checksum.txt
    sha256sum $ROS_WS/checksum.txt >> $ROS_WS/checksum.txt
    rm -rf $OVERLAY_WS/*
    EOF
  displayName: Pre Checkout
  name: pre_checkout
- checkout: self
  path: navigation2
- script: |
    sudo -H --preserve-env -u root bash << EOF
    set -x
    mkdir -p $OVERLAY_WS/src
    cp -r ${PIPELINE_WORKSPACE}/navigation2 $OVERLAY_WS/src
    rm $OVERLAY_WS/src/navigation2/nav2_system_tests/COLCON_IGNORE
    if ! cmp \
      $OVERLAY_WS/src/navigation2/tools/ros2_dependencies.repos \
      $UNDERLAY_WS/ros2_dependencies.repos >/dev/null 2>&1
    then
      echo "Cleaning Underlay"
      rm -rf $UNDERLAY_WS/*
      cp $OVERLAY_WS/src/navigation2/tools/ros2_dependencies.repos \
        $UNDERLAY_WS/ros2_dependencies.repos
      mkdir -p $UNDERLAY_WS/src
      vcs import $UNDERLAY_WS/src \
        < $UNDERLAY_WS/ros2_dependencies.repos
    fi
    EOF
  displayName: Post Checkout
  name: post_checkout